-------------------------------------------------------------------------------------------
1242. Coding Conventions and Best Practices followed in NeuronRain Architecture and Development
-------------------------------------------------------------------------------------------
There are no strict standard conventions or practices followed in NeuronRain commits but following are
some guiding principles:
1.NeuronRain repositories are spread across SourceForge(https://sourceforge.net/u/userid-769929/),GitHub(https://github.com/shrinivaasanka/) and GitLab(https://gitlab.com/shrinivaasanka/) - though they do not differ much at present, NeuronRain SourceForge focuses on Astronomical Datasets, NeuronRain GitHub is for Generic Datasets and Clouds and NeuronRain GitLab is intended for Drone Development. Every source file has copyleft header and attributions.
2.Presently there are no Continuous Integration/Unit testing framework. But every code change is tested manually 
and logs are captured suffixing timestamps in separate testlogs/ folder within C/C++/Java/Python source directories.
3.Development model followed is somewhat similar to Agile (but only a Single person team - K.Srinivasan - https://sites.google.com/site/kuja27/ - Deleted and Mirrored at https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tree/master/kuja27_website_mirrored) and small incremental changes are frequent compared to rare big feature additions/changes especially in Python/MachineLearning code. Python code is PEP8 compliant (enforced by autopep8)  
4.Code documentation - comments are profusely littered wherever necessary. NeuronRain FAQ simulates an enduser and asks questions on h(is/er) behalf and answers them.
5.Architectural choices are more important than implementation - no complicated overengineering - Occam's Razor. 
6.VIRGO32 and VIRGO64 linux kernel base mainline PPA versions are not frequently updated having reached minimum stability.
7.Benchmarks on Single/Multicore/Clusters are committed for salient Cloud implemented features (Factorization, Intrinsic Merit/Fitness, VIRGO system calls-drivers etc.,)
8.Code Reviews are Self-Reviews (GitHub and GitLab review tool comments by Author) only based on QE/QA logs. Entire NeuronRain repositories are architected and developed by 1 person team (K.Srinivasan - https://acadpdrafts.readthedocs.io/en/latest/) without any peer review. NeuronRain development is free,open and transparent not-for-profit charity effort. Comprehensive logs are committed along with almost every code change in NeuronRain repositories in Sourceforge, GitHub and GitLab available for public review.
9.To err is human - erroneous commits are corrected as and when found. Bug Tracking is minimal and there are no strict timelines for resolution. Following are bug tracking pages for all Krishna iResearch - NeuronRain repositories: 
	(Deprecated) SourceForge - NeuronRain Research - https://sourceforge.net/u/ka_shrinivaasan/tickets/
	(Deprecated) GitHub - NeuronRain Green - https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/issues
	(Deprecated) GitLab - NeuronRain Antariksh - https://gitlab.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/-/issues
	(Deprecated) AsFer GitHub issues page - https://github.com/shrinivaasanka/asfer-github-code/issues?q=is%3Aissue+is%3Aclosed). 
	JIRA Bug Tracking for all NeuronRain repositories - https://krishnairesearch.atlassian.net/
10.NeuronRain architecure and development has two worlds - userspace(AsFer) cloud/machine learning and kernelspace(VIRGO/KingCobra/USBmd) cloud/Embedded/IoT/Drones/Robotics - connected by kernel_analytics.conf and live reading of remote sockets for analytics variables from kernel_analytics module. AsFer has more activity compared to others.
11.No strict deadlines/releases but repositories are source-released periodically.
12.Bug Reports/Pull Requests are encouraged at https://krishnairesearch.atlassian.net/ but resolution depends on feasibility and time availability.
13.Each NeuronRain repository has a design document updated periodically for commits and related technical notes.Though "git log" is sufficient, design document delves into theoretical aspects of the implementation which are related to publications and draft publications of the author. Commits for multiple dates are sometimes batched and dates of commits might be out of sync with dates of code commentaries in design documents. NeuronRain design documents have unified numbering for theory content because of strongly connected conceptual graph aligned to the 32-bit and 64-bit codebases - AstroInfer(Machine Learning), USBmd(Software Analytics and Program Analyzer), VIRGO(IoT,Scheduler/Kernel Analytics and Program Analyzer), KingCobra(Kernelspace messaging and Algorithmic economics), GRAFIT(course materials overlap theory of NeuronRain), Krishna_iResearch_DoxygenDocs(NeuronRain FAQ), Acadpdrafts(publications and drafts for implementations in NeuronRain). Numbering of sections in NeuronRain Design is not in sorted order. Section numbers serve only as unique-id(s) which could be cross-linked to create a graph structure as new related sections are added - in other words NeuronRain Design is a flattened topological sort of NeuronRain Conceptual Graph.
14.In essence any good software relies on the basic thumbrule: concept feature --- design/algorithm for feature --- choice of software for implementation of the algorithm --- how much value this new feature adds to existing implementation .
15.Any software is the result of immense human effort. NeuronRain is an academic FOSS research and development product which includes implementations and later non-peer reviewed expansions of author's publications (https://scholar.google.com/citations?user=eLZY7CIAAAAJ&hl=en - captured at https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/SrinivasanKannanGoogleScholarProfile.pdf, https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/SrinivasanKannanArXivProfile.pdf, https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/SrinivasanKannanDBLPProfile.pdf, https://github.com/shrinivaasanka/asfer-github-code/blob/master/asfer-docs/_Srinivasan%20Kannan_%20-%20_Google%20Scholar_.html and https://github.com/shrinivaasanka/asfer-github-code/tree/master/asfer-docs/_Srinivasan%20Kannan_%20-%20_Google%20Scholar__files) and contributed as charity - https://arxiv.org/user/698017/pwc_link, https://arxiv.org/user/626007/pwc_link, https://tac.nist.gov/publications/2010/participant.papers/CMI_IIT.proceedings.pdf (https://cs.paperswithcode.com/paper/decidability-of-existence-and-construction-of, https://paperswithcode.com/paper/few-algorithms-for-ascertaining-merit-of-a) - an alpha or beta version in state of flux - and integration of nightly build setup, QA/QE test suites and formal installation packages for OS platforms are pending. There is no mobile app for NeuronRain though it can be installed on Android which is a linux-forkoff just like any other OS. NeuronRain has not been tested on Production-grade Datasets/Cloud/Drones and largescale institutional-commercial-corporate deployments if any are cautioned against per FAQ,Licensing and Documentation URLs in 17 and 18 - especially VIRGO linux kernel system calls and drivers (kernelspace cloud RPC) are sensitive to hardware-architectural idiosyncracies and mainline linux kernel versions. Drone code has been tested only on JMAVSIM flight simulator. Algorithmic fairness of ML datasets is not vouchsafed. Neuro Cryptocurrency Rig has been implemented only for academic use. NeuronRain platform and Neuro cryptocurrency cannot be used for gaming and gambling purposes. Dependency OSS licenses are strictly respected and periodically updated in Requirements.txt. More details at Disclaimer in NeuronRain Documentation and Licensing - https://neuronrain-documentation.readthedocs.io/en/latest/ 
16.Copyrights for Images, Audios, Videos, Manual or Spider Crawled Websites, News articles and Social Network Profiles for testing purposes have been attributed to the respective source - Most of them are related to the author excluding oriental and western classical music clips. NeuronRain depends on voluminous GIS Raster Data (GHSL,HRSL,SEDAC) for Urban sprawl and Climate AI models. 
17.NeuronRain Documentation - https://neuronrain-documentation.readthedocs.io/en/latest/
18.NeuronRain Documentation Repositories:
	18.1 (Updated frequently) GitHub - https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs ( NeuronRain Conceptual Graph, FAQ and Licensing - https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/index.rst )
	18.2 (Updated frequently) GitLab - https://gitlab.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs ( NeuronRain Conceptual Graph, FAQ and Licensing - https://gitlab.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/-/blob/master/index.rst?ref_type=heads )
	18.3 (Updated frequently) SourceForge - https://sourceforge.net/u/userid-769929/Krishna_iResearch_DoxygenDocs/ci/master/tree/ ( NeuronRain Conceptual Graph, FAQ and Licensing - https://sourceforge.net/u/ka_shrinivaasan/Krishna_iResearch_DoxygenDocs/ci/master/tree/index.rst )
	18.4 GitHub Pages - https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/ (Latest NeuronRain documentation has been replicated in this URL due to problems in RST to html Sphinx render conversion in https://neuronrain-documentation.readthedocs.io/en/latest/ and earlier URL doesn't get automatically updated sometimes)
19.OpenHub Source Code Analyzer Profile - https://www.openhub.net/accounts/ka_shrinivaasan, https://www.openhub.net/accounts/ka_shrinivaasan/positions
20.NeuronRain commits X handle - https://X.com/neuronrain_comm
21.Author's website and CV - http://www.krishna-iresearch.org/ , https://acadpdrafts.readthedocs.io/en/latest/ , https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/blob/master/CV/CV.pdf - Mirror of deleted https://sites.google.com/site/kuja27/ portal is at https://github.com/shrinivaasanka/Krishna_iResearch_DoxygenDocs/tree/master/kuja27_website_mirrored
22.NeuronRain has a Confluence wiki page for documenting miscellaneous information related to design notes and specifications - https://krishnairesearch.atlassian.net/wiki/spaces/SD/overview
23.NeuronRain has a very minimal AngularJS GUI frontend that can execute binaries and scripts from user input and TypeScript ViteJS GUI webserver for Live traffic models. Entire architecture of NeuronRain (userspace AsFer AI + USBmd-KingCobra-VIRGO Linux kernelspace cloud RPC-IoT-analytics interface) is summarized in diagram https://neuronrain-documentation.readthedocs.io/en/latest/_images/NeuronRainVIRGOArchitecture.jpg. 
24.Following NeuronRain repositories have separate ReadTheDocs websites updated manually from respective text design documents (but may not be as latest as https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/ , https://neuronrain-documentation.readthedocs.io/en/latest/ and https://acadpdrafts.readthedocs.io/en/latest/ due to formatting errors): 
	24.1 AstroInfer - https://astroinfer.readthedocs.io/en/latest/ 
	24.2 USBmd64 - https://usb-md64-github-code.readthedocs.io/en/latest/
	24.3 VIRGO64 - https://virgo64-linux-github-code.readthedocs.io/en/latest/
	24.4 KingCobra64 - https://kingcobra64-github-code.readthedocs.io/en/latest/ 
	24.5 AstroInfer userspace code docs - https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/AsFer/html/files.html
	24.6 USB-md linux kernel driver code docs - https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/USBmd/html/files.html
	24.7 VIRGO linux kernel code docs - https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/VIRGO/html/files.html
	24.8 KingCobra linux kernel driver code docs - https://shrinivaasanka.github.io/Krishna_iResearch_DoxygenDocs/KingCobra/html/files.html
25.19 Lessons in Opensource Software Development - http://www.catb.org/~esr/writings/cathedral-bazaar/cathedral-bazaar/index.html - most importantly 1,2,3,4,9,11,12,13,14,18
26.YouTube Channel (academic audio-visuals including those related to and used as datasets within NeuronRain FOSS) - https://www.youtube.com/@srinivasankannan5204
27.Text Design Documents in NeuronRain repositories are divided into sections and each section is in following regex format:
-------------------------------------------------------------------------------------------------------------------------------
(<TYPE of Section - one or combination of THEORY, FEATURE, JIRA>) <Section number>. <Section headline> - <Date> - <comma separated list of related section numbers>
-------------------------------------------------------------------------------------------------------------------------------
<Text of the section>

References:
----------
<List of references with a quoted excerpt from the reference relevant to the section - often accompanied by a comment which could be an extension of the section text> 
28. NeuronRain features list - autogenerated from regex search of NeuronRain repository design text documents - in https://github.com/shrinivaasanka/asfer-github-code/blob/3372e4fa8c2b7018d7e4a5cebb29286d992d162e/python-src/NeuronRainFeatures.txt   
29. Connected Papers URL for papers in (15):
	29.1 Decidability of Existence and Construction of a Complement of a given Function - https://www.connectedpapers.com/main/589826b4ab64b61706aa12542fa4c484b2c3ac82/Decidability-of-Existence-and-Construction-of-a-Complement-of-a-given-Function/graph
	29.2 Few Algorithms for ascertaining merit of a document and their applications - https://www.connectedpapers.com/main/286207f0e4e27c2513b65f4bd499ac20d970d4b1/Few-Algorithms-for-ascertaining-merit-of-a-document-and-their-applications/graph
	29.3 TAC 2010 Summarization Track - Update Summarization with Interview Algorithm - https://www.connectedpapers.com/main/903c02c30b7c8708c957bc82959e17c828bfbd77/TAC-2010-Summarization-Track-%20-Update-Summarization-with-Interview-Algorithm/graph 
