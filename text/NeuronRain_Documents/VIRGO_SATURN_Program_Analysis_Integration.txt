/***************************************************************************************
#-------------------------------------------------------------------------------------------------------
#NEURONRAIN VIRGO - Cloud, Machine Learning and Queue augmented Linux Kernel Fork-off
#This program is free software: you can redistribute it and/or modify
#it under the terms of the GNU General Public License as published by
#the Free Software Foundation, either version 3 of the License, or
#(at your option) any later version.
#This program is distributed in the hope that it will be useful,
#but WITHOUT ANY WARRANTY; without even the implied warranty of
#MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#GNU General Public License for more details.
#You should have received a copy of the GNU General Public License
#along with this program.  If not, see <http://www.gnu.org/licenses/>.
#--------------------------------------------------------------------------------------------------------
#Copyleft (Copyright+):
#Srinivasan Kannan (alias) Ka.Shrinivaasan (alias) Shrinivas Kannan
#Ph: 9791499106, 9003082186
#Krishna iResearch Open Source Products Profiles:
#http://sourceforge.net/users/ka_shrinivaasan,
#https://github.com/shrinivaasanka,
#https://www.openhub.net/accounts/ka_shrinivaasan
#Personal website(research): https://sites.google.com/site/kuja27/
#emails: ka.shrinivaasan@gmail.com, shrinivas.kannan@gmail.com,
#kashrinivaasan@live.com
#--------------------------------------------------------------------------------------------------------
*****************************************************************************************/

---------------------------------------------------------------------------------------------------------
1251. VIRGO SATURN Program Analysis Integration
---------------------------------------------------------------------------------------------------------

1. SATURN (http://saturn.stanford.edu/) is a Program Analysis Software for Verification of Large Scale Linux Software.

2. There are quite a few other softwares already available :
	2.1 SLAM (Windows) and Yogi - Sriram Rajamani, Microsoft Research - http://research.microsoft.com/en-us/projects/slam/
	2.2 BLAST - http://forge.ispras.ru/projects/blast/ which is part of Linux Driver Verification Project 
	(http://forge.ispras.ru/projects/ldv)

3. SATURN has been integrated into VIRGO Linux Kernel drivers/ pursuant to the author's old PhD thesis proposal in 2011 (https://sites.google.com/site/kuja27/PhDThesisProposal.pdf) which was later dropped because of penchant for Complexity+MachineLearning and lack of feasibility. But now It finds relevance as a fundamental ingredient in Software Analytics subsystem of NeuronRain AsFer and VIRGO. SATURN error reports leveraged with AsFer Machine Learning makes a hitherto unusual combination - Formal Logic Verification + Data Analytics.

4. saturn_program_analysis has been added as a new VIRGO kernel module in drivers/ with an example driver implementation adapted from kernel_analytics. It can be overwritten with inline code or an exported function invocation from external driver and thus can do analysis of any arbitrary C subroutine.

5. SATURN installed from above url requires OCAML, libstr etc., for build to succeed with NATIVECAML unset in $CLPA_HOME/clpa/cil/Makefile. 

6. Following changes are required in $CLPA_HOME/clpa/build-intercept/ - New file interceptor.config with following lines added for source files:
intercept_home=/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/drivers/virgo/saturn_program_analysis
intercept_scripts=/home/shrinivaasanka/clpa/build-intercept/
intercept_library=/home/shrinivaasanka/clpa/build-intercept/libintercept.so

-----------------------------------------------------------------------
7. Program Analysis with SATURN - steps
-----------------------------------------------------------------------
SATURN intercepts the linux kernel driver build and creates analysis tree directory (saturn_program_analysis_trees). Intercepted build creates .db files in trees which are extracted with clpa-extract to generate a report (errors.txt). It can then be analyzed for algorithms like null pointer detection, aliases etc., from calypso (.clp) files in analysis/. Following does null pointer analysis.

  $/home/shrinivaasanka/clpa/bin/clpa-intercept make -C /lib/modules/`uname -r`/build/ M=`pwd` clean
  $/home/shrinivaasanka/clpa/bin/clpa-intercept make -C /lib/modules/`uname -r`/build/ M=`pwd` 
  $/home/shrinivaasanka/clpa/bin/clpa-intercept make -C /lib/modules/`uname -r`/build/ M=`pwd` modules_install
  $/home/shrinivaasanka/clpa/bin/clpa-extract ../saturn_program_analysis_trees/ virgo_saturn_program_analysis.ko 
  $/home/shrinivaasanka/clpa/bin/clpa --no-fixpoint --timeout 60 /home/shrinivaasanka/clpa/analysis/null/null.clp 

Following commandlines do memory, locking analysis and create Graphviz renderable DOT files:
 /home/shrinivaasanka/clpa/bin/clpa --no-fixpoint --timeout 60 /home/shrinivaasanka/clpa/analysis/memory/base01/run.clp
 /home/shrinivaasanka/clpa/bin/clpa  --stats memory_deltas --timeout 60 /home/shrinivaasanka/clpa/analysis/memory/base02/run.clp
 /home/shrinivaasanka/clpa/bin/clpa  --list-stats
 /home/shrinivaasanka/clpa/bin/clpa  --stats memory_deltas --stats sat_counts --timeout 60 /home/shrinivaasanka/clpa/analysis/memory/base02/run.clp
 /home/shrinivaasanka/clpa/bin/clpa  --list-debug
 /home/shrinivaasanka/clpa/bin/clpa  --stats memory_deltas --stats sat_counts --timeout 60 /home/shrinivaasanka/clpa/analysis/memory/ptdot.clp
 /home/shrinivaasanka/clpa/bin/clpa  --stats memory_deltas --stats sat_counts --timeout 60 /home/shrinivaasanka/clpa/analysis/smemory/memory.clp
 /home/shrinivaasanka/clpa/bin/clpa  --stats memory_deltas --stats sat_counts --timeout 60 /home/shrinivaasanka/clpa/analysis/smemory/paths.clp
 /home/shrinivaasanka/clpa/bin/clpa  --stats memory_deltas --stats sat_counts --timeout 60 /home/shrinivaasanka/clpa/analysis/locking/locking.clp

Following does CFG and memory analysis and plots a DOT graph for dataflow:
 /home/shrinivaasanka/clpa/bin/clpa /home/shrinivaasanka/clpa/analysis/virgosaturnmemory.clp
 /home/shrinivaasanka/clpa/bin/clpa /home/shrinivaasanka/clpa/analysis/virgosaturncfg.clp


---------------------------------------------------------------------------------------------------------------------------------------
8. NULL pointer Error report from SATURN - from
$VIRGO_LINUX_ROOT/linux-kernel-extensions/drivers/virgo/saturn_program_analysis/saturn_program_analysis_trees/error.txt
---------------------------------------------------------------------------------------------------------------------------------------
blue
925 blue __arg0 of function /media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h:__section_mem_map_addr can evaluate to NULL /media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h:__section_mem_map_addr (925:/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mm.h),  final site of dereference is: (1151:/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h)
/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mm.h
Null pointer is passed to a function which dereferences it.
None

blue
205 blue __arg0 of function /media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h:__section_mem_map_addr can evaluate to NULL /media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h:__section_mem_map_addr (205:/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/scatterlist.h),  final site of dereference is: (1151:/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h)
/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/scatterlist.h
Null pointer is passed to a function which dereferences it.
None

orange
382 orange (INCONSISTENT USE) Possible null dereference of variable dst. This variable is checked for Null at lines: 386
/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/net/dst.h
Inconsistency error
None

blue
1471 blue __arg0 of function /media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h:__section_mem_map_addr can evaluate to NULL /media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h:__section_mem_map_addr (1471:/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mm.h),  final site of dereference is: (1151:/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mmzone.h)
/media/shrinivaasanka/0fc4d8a2-1c74-42b8-8099-9ef78d8c8ea2/home/kashrinivaasan/linux-4.1.5/include/linux/mm.h
Null pointer is passed to a function which dereferences it.
None

